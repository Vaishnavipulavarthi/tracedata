strict digraph "" {
	node [label="\N"];
	"637:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7fa020e2fe10>",
		clk_sens=True,
		fillcolor=gold,
		label="637:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_data_st_r', 'rx_data_valid_r', 'adr_cb', 'mdin', 'dtmp_sel_r']"];
	"638:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa020e2ff10>",
		fillcolor=springgreen,
		label="638:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"637:AL" -> "638:IF"	 [cond="[]",
		lineno=None];
	"642:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa020e2ffd0>",
		fillcolor=springgreen,
		label="642:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"642:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e36050>",
		fillcolor=firebrick,
		label="642:NS
dtmp_r[07:00] <= rx_data_st_r;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e36050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"642:IF" -> "642:NS"	 [cond="['adr_cb']",
		label="(adr_cb[1:0] == 2'h0)",
		lineno=642];
	"640:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa020e2ff50>",
		fillcolor=springgreen,
		label="640:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"641:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7fa020e2ff90>",
		fillcolor=turquoise,
		label="641:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"640:IF" -> "641:BL"	 [cond="['rx_data_valid_r']",
		label=rx_data_valid_r,
		lineno=640];
	"638:IF" -> "640:IF"	 [cond="['dtmp_sel_r']",
		label="!(dtmp_sel_r)",
		lineno=638];
	"638:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e40050>",
		fillcolor=firebrick,
		label="638:NS
dtmp_r <= mdin;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e40050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"638:IF" -> "638:NS"	 [cond="['dtmp_sel_r']",
		label=dtmp_sel_r,
		lineno=638];
	"643:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e36450>",
		fillcolor=firebrick,
		label="643:NS
dtmp_r[15:08] <= rx_data_st_r;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e36450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_637:AL"	 [def_var="['dtmp_r']",
		label="Leaf_637:AL"];
	"643:NS" -> "Leaf_637:AL"	 [cond="[]",
		lineno=None];
	"641:BL" -> "642:IF"	 [cond="[]",
		lineno=None];
	"644:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa020e367d0>",
		fillcolor=springgreen,
		label="644:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"641:BL" -> "644:IF"	 [cond="[]",
		lineno=None];
	"643:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa020e36410>",
		fillcolor=springgreen,
		label="643:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"641:BL" -> "643:IF"	 [cond="[]",
		lineno=None];
	"645:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7fa020e36bd0>",
		fillcolor=springgreen,
		label="645:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"641:BL" -> "645:IF"	 [cond="[]",
		lineno=None];
	"645:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e36c10>",
		fillcolor=firebrick,
		label="645:NS
dtmp_r[31:24] <= rx_data_st_r;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e36c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"645:NS" -> "Leaf_637:AL"	 [cond="[]",
		lineno=None];
	"644:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e36810>",
		fillcolor=firebrick,
		label="644:NS
dtmp_r[23:16] <= rx_data_st_r;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7fa020e36810>]",
		style=filled,
		typ=NonblockingSubstitution];
	"644:NS" -> "Leaf_637:AL"	 [cond="[]",
		lineno=None];
	"638:NS" -> "Leaf_637:AL"	 [cond="[]",
		lineno=None];
	"644:IF" -> "644:NS"	 [cond="['adr_cb']",
		label="(adr_cb[1:0] == 2'h2)",
		lineno=644];
	"643:IF" -> "643:NS"	 [cond="['adr_cb']",
		label="(adr_cb[1:0] == 2'h1)",
		lineno=643];
	"645:IF" -> "645:NS"	 [cond="['adr_cb']",
		label="(adr_cb[1:0] == 2'h3)",
		lineno=645];
	"642:NS" -> "Leaf_637:AL"	 [cond="[]",
		lineno=None];
}
