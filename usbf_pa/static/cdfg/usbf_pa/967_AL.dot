strict digraph "" {
	node [label="\N"];
	"1031:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d0fc50>",
		fillcolor=turquoise,
		label="1031:BL
dsel = 1'b1;
crc_sel2 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d0f9d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d0fb10>]",
		style=filled,
		typ=Block];
	"1034:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55d3d0fc90>",
		fillcolor=springgreen,
		label="1034:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1031:BL" -> "1034:IF"	 [cond="[]",
		lineno=None];
	"976:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f55d3d130d0>",
		fillcolor=linen,
		label="976:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"993:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55d3d13bd0>",
		fillcolor=lightcyan,
		label="993:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "993:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"1006:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55d3d1d610>",
		fillcolor=lightcyan,
		label="1006:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "1006:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"1030:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55d3d2d610>",
		fillcolor=lightcyan,
		label="1030:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "1030:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"1013:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55d3d1dbd0>",
		fillcolor=lightcyan,
		label="1013:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "1013:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"977:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55d3d13150>",
		fillcolor=lightcyan,
		label="977:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "977:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"994:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d13c50>",
		fillcolor=turquoise,
		label="994:BL
tx_valid_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d13ed0>]",
		style=filled,
		typ=Block];
	"993:CA" -> "994:BL"	 [cond="[]",
		lineno=None];
	"987:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d13290>",
		fillcolor=turquoise,
		label="987:BL
tx_valid_d = 1'b1;
next_state = DATA;
dsel = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d132d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d13410>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d13550>]",
		style=filled,
		typ=Block];
	"Leaf_967:AL"	 [def_var="['dsel', 'tx_valid_d', 'last', 'crc_sel1', 'crc_sel2', 'rd_next', 'next_state']",
		label="Leaf_967:AL"];
	"987:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"1035:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d0fed0>",
		fillcolor=turquoise,
		label="1035:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d0ff10>]",
		style=filled,
		typ=Block];
	"1035:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"999:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55d3d1d050>",
		fillcolor=springgreen,
		label="999:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1000:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d1d090>",
		fillcolor=turquoise,
		label="1000:BL
dsel = 1'b1;
crc_sel1 = 1'b1;
next_state = CRC1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1d0d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1d210>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1d350>]",
		style=filled,
		typ=Block];
	"999:IF" -> "1000:BL"	 [cond="['send_data', 'tx_ready', 'tx_valid_r']",
		label="(!send_data && tx_ready && tx_valid_r)",
		lineno=999];
	"967:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55d3d2d690>",
		clk_sens=False,
		fillcolor=gold,
		label="967:AL",
		sens="['state', 'send_data', 'tx_ready', 'tx_valid_r', 'send_zero_length_r']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tx_ready', 'send_data', 'state', 'tx_valid_r', 'send_zero_length_r']"];
	"968:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d2d9d0>",
		fillcolor=turquoise,
		label="968:BL
next_state = state;
tx_valid_d = 1'b0;
dsel = 1'b0;
rd_next = 1'b0;
last = 1'b0;
crc_sel1 = 1'b0;
crc_sel2 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d2da10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d2db50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d2dc90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d2ddd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d2df10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3cb7090>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3cb71d0>]",
		style=filled,
		typ=Block];
	"967:AL" -> "968:BL"	 [cond="[]",
		lineno=None];
	"1007:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d1d690>",
		fillcolor=turquoise,
		label="1007:BL
crc_sel1 = 1'b1;
dsel = 1'b1;
tx_valid_d = 1'b1;
next_state = CRC1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1d6d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1d810>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1d950>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1da90>]",
		style=filled,
		typ=Block];
	"1006:CA" -> "1007:BL"	 [cond="[]",
		lineno=None];
	"1007:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"979:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55d3d13210>",
		fillcolor=springgreen,
		label="979:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"986:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55d3d13250>",
		fillcolor=springgreen,
		label="986:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"979:IF" -> "986:IF"	 [cond="['send_zero_length_r', 'send_data']",
		label="!((send_zero_length_r && send_data))",
		lineno=979];
	"980:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d136d0>",
		fillcolor=turquoise,
		label="980:BL
tx_valid_d = 1'b1;
next_state = WAIT;
dsel = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d13710>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d13850>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d13990>]",
		style=filled,
		typ=Block];
	"979:IF" -> "980:BL"	 [cond="['send_zero_length_r', 'send_data']",
		label="(send_zero_length_r && send_data)",
		lineno=979];
	"978:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d131d0>",
		fillcolor=turquoise,
		label="978:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"978:BL" -> "979:IF"	 [cond="[]",
		lineno=None];
	"1030:CA" -> "1031:BL"	 [cond="[]",
		lineno=None];
	"996:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d13cd0>",
		fillcolor=cadetblue,
		label="996:BS
rd_next = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d13cd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"996:BS" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"1017:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55d3d1de90>",
		fillcolor=springgreen,
		label="1017:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1018:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d2d1d0>",
		fillcolor=turquoise,
		label="1018:BL
last = 1'b1;
crc_sel2 = 1'b1;
next_state = CRC2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d2d210>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d2d350>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d2d490>]",
		style=filled,
		typ=Block];
	"1017:IF" -> "1018:BL"	 [cond="['tx_ready']",
		label=tx_ready,
		lineno=1017];
	"1024:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d1ded0>",
		fillcolor=turquoise,
		label="1024:BL
tx_valid_d = 1'b1;
crc_sel1 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1df10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d2d090>]",
		style=filled,
		typ=Block];
	"1017:IF" -> "1024:BL"	 [cond="['tx_ready']",
		label="!(tx_ready)",
		lineno=1017];
	"1039:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d0fd10>",
		fillcolor=turquoise,
		label="1039:BL
last = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d0fd50>]",
		style=filled,
		typ=Block];
	"1039:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"1034:IF" -> "1035:BL"	 [cond="['tx_ready']",
		label=tx_ready,
		lineno=1034];
	"1034:IF" -> "1039:BL"	 [cond="['tx_ready']",
		label="!(tx_ready)",
		lineno=1034];
	"1014:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55d3d1dc50>",
		fillcolor=turquoise,
		label="1014:BL
dsel = 1'b1;
tx_valid_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1dc90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55d3d1dd50>]",
		style=filled,
		typ=Block];
	"1013:CA" -> "1014:BL"	 [cond="[]",
		lineno=None];
	"1000:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"986:IF" -> "987:BL"	 [cond="['send_data']",
		label=send_data,
		lineno=986];
	"994:BL" -> "999:IF"	 [cond="[]",
		lineno=None];
	"995:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55d3d13c90>",
		fillcolor=springgreen,
		label="995:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"994:BL" -> "995:IF"	 [cond="[]",
		lineno=None];
	"977:CA" -> "978:BL"	 [cond="[]",
		lineno=None];
	"995:IF" -> "996:BS"	 [cond="['tx_ready', 'tx_valid_r']",
		label="(tx_ready && tx_valid_r)",
		lineno=995];
	"1014:BL" -> "1017:IF"	 [cond="[]",
		lineno=None];
	"980:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"1018:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"1024:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"968:BL" -> "976:CS"	 [cond="[]",
		lineno=None];
}
