strict digraph "compose( ,  )" {
	node [label="\N"];
	"919:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ae5650>",
		def_var="['crc16_clr']",
		fillcolor=deepskyblue,
		label="919:AS
crc16_clr = send_data & !send_data_r;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['send_data', 'send_data_r']"];
	"923:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b2ae5c90>",
		clk_sens=True,
		fillcolor=gold,
		label="923:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['crc16_add', 'crc16_clr', 'crc16_next']"];
	"919:AS" -> "923:AL";
	"843:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b2c05f10>",
		clk_sens=True,
		fillcolor=gold,
		label="843:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'last', 'crc16_clr', 'send_zero_length_r']"];
	"919:AS" -> "843:AL";
	"852:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9790>",
		fillcolor=firebrick,
		label="852:NS
tx_valid_r1 <= tx_valid;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9790>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_851:AL"	 [def_var="['tx_valid_r1']",
		label="Leaf_851:AL"];
	"852:NS" -> "Leaf_851:AL"	 [cond="[]",
		lineno=None];
	"907:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b2ad6950>",
		clk_sens=True,
		fillcolor=gold,
		label="907:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['send_data', 'send_token']"];
	"908:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ad6c10>",
		fillcolor=firebrick,
		label="908:NS
tx_first_r <= send_token | send_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ad6c10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"907:AL" -> "908:NS"	 [cond="[]",
		lineno=None];
	"888:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b27d4350>",
		fillcolor=springgreen,
		label="888:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"889:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27d44d0>",
		fillcolor=cadetblue,
		label="889:BS
tx_data_d = tx_data_data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27d44d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"888:IF" -> "889:BS"	 [cond="['send_token', 'send_token_r']",
		label="!((send_token || send_token_r))",
		lineno=888];
	"888:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27d4310>",
		fillcolor=cadetblue,
		label="888:BS
tx_data_d = token_pid;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27d4310>]",
		style=filled,
		typ=BlockingSubstitution];
	"888:IF" -> "888:BS"	 [cond="['send_token', 'send_token_r']",
		label="(send_token || send_token_r)",
		lineno=888];
	"864:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27b5110>",
		fillcolor=firebrick,
		label="864:NS
send_token_r <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27b5110>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_860:AL"	 [def_var="['send_token_r']",
		label="Leaf_860:AL"];
	"864:NS" -> "Leaf_860:AL"	 [cond="[]",
		lineno=None];
	"976:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f55b284c9d0>",
		fillcolor=linen,
		label="976:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1006:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b2842990>",
		fillcolor=lightcyan,
		label="1006:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "1006:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"1030:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b284c750>",
		fillcolor=lightcyan,
		label="1030:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "1030:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"1013:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b2842f10>",
		fillcolor=lightcyan,
		label="1013:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "1013:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"977:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b2873390>",
		fillcolor=lightcyan,
		label="977:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "977:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"993:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b2873a90>",
		fillcolor=lightcyan,
		label="993:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"976:CS" -> "993:CA"	 [cond="['state']",
		label=state,
		lineno=976];
	"965:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2aef5d0>",
		fillcolor=firebrick,
		label="965:NS
state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2aef5d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_962:AL"	 [def_var="['state']",
		label="Leaf_962:AL"];
	"965:NS" -> "Leaf_962:AL"	 [cond="[]",
		lineno=None];
	"899:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2ad6610>",
		fillcolor=cadetblue,
		label="899:BS
tx_spec_data = crc16_rev[7:0];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2ad6610>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_895:AL"	 [def_var="['tx_spec_data']",
		label="Leaf_895:AL"];
	"899:BS" -> "Leaf_895:AL"	 [cond="[]",
		lineno=None];
	"872:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27b5a90>",
		fillcolor=cadetblue,
		label="872:BS
token_pid = { ~4'b1010, 4'b1010 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27b5a90>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_869:AL"	 [def_var="['token_pid']",
		label="Leaf_869:AL"];
	"872:BS" -> "Leaf_869:AL"	 [cond="[]",
		lineno=None];
	"1035:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b284cdd0>",
		fillcolor=turquoise,
		label="1035:BL
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284cf50>]",
		style=filled,
		typ=Block];
	"Leaf_967:AL"	 [def_var="['dsel', 'tx_valid_d', 'last', 'crc_sel1', 'crc_sel2', 'rd_next', 'next_state']",
		label="Leaf_967:AL"];
	"1035:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"999:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b2842550>",
		fillcolor=springgreen,
		label="999:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1000:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b2842790>",
		fillcolor=turquoise,
		label="1000:BL
dsel = 1'b1;
crc_sel1 = 1'b1;
next_state = CRC1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2842690>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b28427d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2842910>]",
		style=filled,
		typ=Block];
	"999:IF" -> "1000:BL"	 [cond="['send_data', 'tx_ready', 'tx_valid_r']",
		label="(!send_data && tx_ready && tx_valid_r)",
		lineno=999];
	"967:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b2aef990>",
		clk_sens=False,
		fillcolor=gold,
		label="967:AL",
		sens="['state', 'send_data', 'tx_ready', 'tx_valid_r', 'send_zero_length_r']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tx_ready', 'send_data', 'state', 'tx_valid_r', 'send_zero_length_r']"];
	"Leaf_962:AL" -> "967:AL";
	"943:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2adfa10>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="943:AS
crc16_rev[9] = ~crc16[14];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"895:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b27d4d90>",
		clk_sens=False,
		fillcolor=gold,
		label="895:AL",
		sens="['crc_sel1', 'crc_sel2', 'data_pid', 'crc16_rev']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['crc_sel1', 'crc16_rev', 'crc_sel2', 'data_pid']"];
	"943:AS" -> "895:AL";
	"887:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b27d4110>",
		clk_sens=False,
		fillcolor=gold,
		label="887:AL",
		sens="['send_token', 'send_token_r', 'token_pid', 'tx_data_data']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['send_token', 'send_token_r', 'token_pid', 'tx_data_data']"];
	"Leaf_860:AL" -> "887:AL";
	"938:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2aded50>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="938:AS
crc16_rev[14] = ~crc16[9];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"938:AS" -> "895:AL";
	"1007:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b2842cd0>",
		fillcolor=turquoise,
		label="1007:BL
crc_sel1 = 1'b1;
dsel = 1'b1;
tx_valid_d = 1'b1;
next_state = CRC1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2842a90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2842bd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2842d10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2842e50>]",
		style=filled,
		typ=Block];
	"1006:CA" -> "1007:BL"	 [cond="[]",
		lineno=None];
	"881:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27eea90>",
		fillcolor=cadetblue,
		label="881:BS
data_pid = { ~4'b0111, 4'b0111 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27eea90>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_877:AL"	 [def_var="['data_pid']",
		label="Leaf_877:AL"];
	"881:BS" -> "Leaf_877:AL"	 [cond="[]",
		lineno=None];
	"924:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b2ae5e50>",
		fillcolor=springgreen,
		label="924:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"923:AL" -> "924:IF"	 [cond="[]",
		lineno=None];
	"882:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27eed50>",
		fillcolor=cadetblue,
		label="882:BS
data_pid = { ~4'b1111, 4'b1111 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27eed50>]",
		style=filled,
		typ=BlockingSubstitution];
	"882:BS" -> "Leaf_877:AL"	 [cond="[]",
		lineno=None];
	"880:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b27ee610>",
		fillcolor=lightcyan,
		label="880:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"880:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27ee810>",
		fillcolor=cadetblue,
		label="880:BS
data_pid = { ~4'b1011, 4'b1011 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27ee810>]",
		style=filled,
		typ=BlockingSubstitution];
	"880:CA" -> "880:BS"	 [cond="[]",
		lineno=None];
	"879:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b27ee310>",
		fillcolor=lightcyan,
		label="879:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"879:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27ee510>",
		fillcolor=cadetblue,
		label="879:BS
data_pid = { ~4'b0011, 4'b0011 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27ee510>]",
		style=filled,
		typ=BlockingSubstitution];
	"879:CA" -> "879:BS"	 [cond="[]",
		lineno=None];
	"946:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ae81d0>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="946:AS
crc16_rev[6] = ~crc16[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"946:AS" -> "895:AL";
	"845:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b27c9190>",
		fillcolor=springgreen,
		label="845:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"847:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b27c9450>",
		fillcolor=springgreen,
		label="847:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"845:IF" -> "847:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=845];
	"845:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9150>",
		fillcolor=firebrick,
		label="845:NS
zero_length_r <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"845:IF" -> "845:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=845];
	"898:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b2ad6490>",
		fillcolor=springgreen,
		label="898:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"898:IF" -> "899:BS"	 [cond="['crc_sel1']",
		label="!(crc_sel1)",
		lineno=898];
	"898:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2ad6390>",
		fillcolor=cadetblue,
		label="898:BS
tx_spec_data = crc16_rev[15:8];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2ad6390>]",
		style=filled,
		typ=BlockingSubstitution];
	"898:IF" -> "898:BS"	 [cond="['crc_sel1']",
		label=crc_sel1,
		lineno=898];
	"866:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27b53d0>",
		fillcolor=firebrick,
		label="866:NS
send_token_r <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27b53d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"866:NS" -> "Leaf_860:AL"	 [cond="[]",
		lineno=None];
	"891:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b27d4750>",
		clk_sens=False,
		fillcolor=gold,
		label="891:AL",
		sens="['dsel', 'tx_data_st', 'tx_spec_data']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['dsel', 'tx_spec_data', 'tx_data_st']"];
	"Leaf_895:AL" -> "891:AL";
	"1000:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"Leaf_913:AL"	 [def_var="['send_data_r']",
		label="Leaf_913:AL"];
	"Leaf_913:AL" -> "919:AS";
	"916:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b2ae51d0>",
		clk_sens=True,
		fillcolor=gold,
		label="916:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['send_data_r']"];
	"Leaf_913:AL" -> "916:AL";
	"921:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ae5ad0>",
		def_var="['crc16_add']",
		fillcolor=deepskyblue,
		label="921:AS
crc16_add = !zero_length_r & (send_data_r & !send_data_r2) | rd_next & !crc_sel1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['zero_length_r', 'send_data_r', 'send_data_r2', 'rd_next', 'crc_sel1']"];
	"Leaf_913:AL" -> "921:AS";
	"862:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9e10>",
		fillcolor=firebrick,
		label="862:NS
send_token_r <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"862:NS" -> "Leaf_860:AL"	 [cond="[]",
		lineno=None];
	"901:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ad6450>",
		def_var="['tx_data']",
		fillcolor=deepskyblue,
		label="901:AS
tx_data = tx_data_d;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tx_data_d']"];
	"964:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b2aef490>",
		fillcolor=springgreen,
		label="964:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"964:IF" -> "965:NS"	 [cond="['rst']",
		label="!((!rst))",
		lineno=964];
	"964:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2aef450>",
		fillcolor=firebrick,
		label="964:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2aef450>]",
		style=filled,
		typ=NonblockingSubstitution];
	"964:IF" -> "964:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=964];
	"854:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b27c9810>",
		clk_sens=True,
		fillcolor=gold,
		label="854:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tx_valid_r1']"];
	"855:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9a10>",
		fillcolor=firebrick,
		label="855:NS
tx_valid_r <= tx_valid_r1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9a10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"854:AL" -> "855:NS"	 [cond="[]",
		lineno=None];
	"862:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b27c9e50>",
		fillcolor=springgreen,
		label="862:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"862:IF" -> "862:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=862];
	"864:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b27b5150>",
		fillcolor=springgreen,
		label="864:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"862:IF" -> "864:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=862];
	"926:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ade0d0>",
		fillcolor=firebrick,
		label="926:NS
crc16 <= crc16_next;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ade0d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_923:AL"	 [def_var="['crc16']",
		label="Leaf_923:AL"];
	"926:NS" -> "Leaf_923:AL"	 [cond="[]",
		lineno=None];
	"964:NS" -> "Leaf_962:AL"	 [cond="[]",
		lineno=None];
	"872:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b27b5890>",
		fillcolor=lightcyan,
		label="872:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"872:CA" -> "872:BS"	 [cond="[]",
		lineno=None];
	"Leaf_887:AL"	 [def_var="['tx_data_d']",
		label="Leaf_887:AL"];
	"889:BS" -> "Leaf_887:AL"	 [cond="[]",
		lineno=None];
	"881:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b27ee8d0>",
		fillcolor=lightcyan,
		label="881:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"881:CA" -> "881:BS"	 [cond="[]",
		lineno=None];
	"896:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b27d4fd0>",
		fillcolor=springgreen,
		label="896:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"896:IF" -> "898:IF"	 [cond="['crc_sel1', 'crc_sel2']",
		label="!((!crc_sel1 && !crc_sel2))",
		lineno=896];
	"896:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2ad6050>",
		fillcolor=cadetblue,
		label="896:BS
tx_spec_data = data_pid;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2ad6050>]",
		style=filled,
		typ=BlockingSubstitution];
	"896:IF" -> "896:BS"	 [cond="['crc_sel1', 'crc_sel2']",
		label="(!crc_sel1 && !crc_sel2)",
		lineno=896];
	"951:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ae8e50>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="951:AS
crc16_rev[1] = ~crc16[6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"951:AS" -> "895:AL";
	"849:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b27c95d0>",
		fillcolor=springgreen,
		label="849:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"847:IF" -> "849:IF"	 [cond="['last']",
		label="!(last)",
		lineno=847];
	"847:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9410>",
		fillcolor=firebrick,
		label="847:NS
zero_length_r <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"847:IF" -> "847:NS"	 [cond="['last']",
		label=last,
		lineno=847];
	"924:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ae5e10>",
		fillcolor=firebrick,
		label="924:NS
crc16 <= 16'hffff;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ae5e10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"924:IF" -> "924:NS"	 [cond="['crc16_clr']",
		label=crc16_clr,
		lineno=924];
	"926:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b2ae5f90>",
		fillcolor=springgreen,
		label="926:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"924:IF" -> "926:IF"	 [cond="['crc16_clr']",
		label="!(crc16_clr)",
		lineno=924];
	"Leaf_843:AL"	 [def_var="['zero_length_r']",
		label="Leaf_843:AL"];
	"845:NS" -> "Leaf_843:AL"	 [cond="[]",
		lineno=None];
	"987:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b2873d50>",
		fillcolor=turquoise,
		label="987:BL
tx_valid_d = 1'b1;
next_state = DATA;
dsel = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2873c50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2873d90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2873ed0>]",
		style=filled,
		typ=Block];
	"987:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"877:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b27ee190>",
		clk_sens=False,
		fillcolor=gold,
		label="877:AL",
		sens="['data_pid_sel']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_pid_sel']"];
	"878:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f55b27eead0>",
		fillcolor=linen,
		label="878:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"877:AL" -> "878:CS"	 [cond="[]",
		lineno=None];
	"887:AL" -> "888:IF"	 [cond="[]",
		lineno=None];
	"Leaf_837:AL"	 [def_var="['send_zero_length_r']",
		label="Leaf_837:AL"];
	"Leaf_837:AL" -> "967:AL";
	"Leaf_837:AL" -> "843:AL";
	"950:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ae8bd0>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="950:AS
crc16_rev[2] = ~crc16[5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"950:AS" -> "895:AL";
	"942:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2adf790>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="942:AS
crc16_rev[10] = ~crc16[13];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"942:AS" -> "895:AL";
	"979:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b2873950>",
		fillcolor=springgreen,
		label="979:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"980:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b2873810>",
		fillcolor=turquoise,
		label="980:BL
tx_valid_d = 1'b1;
next_state = WAIT;
dsel = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b28736d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2873850>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2873990>]",
		style=filled,
		typ=Block];
	"979:IF" -> "980:BL"	 [cond="['send_zero_length_r', 'send_data']",
		label="(send_zero_length_r && send_data)",
		lineno=979];
	"986:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b2873b50>",
		fillcolor=springgreen,
		label="986:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"979:IF" -> "986:IF"	 [cond="['send_zero_length_r', 'send_data']",
		label="!((send_zero_length_r && send_data))",
		lineno=979];
	"Leaf_891:AL"	 [def_var="['tx_data_data']",
		label="Leaf_891:AL"];
	"Leaf_891:AL" -> "887:AL";
	"851:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b27c9050>",
		clk_sens=True,
		fillcolor=gold,
		label="851:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['tx_valid']"];
	"851:AL" -> "852:NS"	 [cond="[]",
		lineno=None];
	"896:BS" -> "Leaf_895:AL"	 [cond="[]",
		lineno=None];
	"924:NS" -> "Leaf_923:AL"	 [cond="[]",
		lineno=None];
	"869:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b27b5390>",
		clk_sens=False,
		fillcolor=gold,
		label="869:AL",
		sens="['token_pid_sel']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_pid_sel']"];
	"870:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f55b27b5d50>",
		fillcolor=linen,
		label="870:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"869:AL" -> "870:CS"	 [cond="[]",
		lineno=None];
	"1031:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b284cd50>",
		fillcolor=turquoise,
		label="1031:BL
dsel = 1'b1;
crc_sel2 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284cb50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284ccd0>]",
		style=filled,
		typ=Block];
	"1030:CA" -> "1031:BL"	 [cond="[]",
		lineno=None];
	"996:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b28421d0>",
		fillcolor=cadetblue,
		label="996:BS
rd_next = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b28421d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"996:BS" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"910:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ad6e10>",
		def_var="['tx_first']",
		fillcolor=deepskyblue,
		label="910:AS
tx_first = (send_token | send_data) & !tx_first_r;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['send_token', 'send_data', 'tx_first_r']"];
	"1014:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b284c290>",
		fillcolor=turquoise,
		label="1014:BL
dsel = 1'b1;
tx_valid_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284c090>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284c210>]",
		style=filled,
		typ=Block];
	"1013:CA" -> "1014:BL"	 [cond="[]",
		lineno=None];
	"878:CS" -> "880:CA"	 [cond="['data_pid_sel']",
		label=data_pid_sel,
		lineno=878];
	"878:CS" -> "879:CA"	 [cond="['data_pid_sel']",
		label=data_pid_sel,
		lineno=878];
	"878:CS" -> "881:CA"	 [cond="['data_pid_sel']",
		label=data_pid_sel,
		lineno=878];
	"882:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b27eeb50>",
		fillcolor=lightcyan,
		label="882:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"878:CS" -> "882:CA"	 [cond="['data_pid_sel']",
		label=data_pid_sel,
		lineno=878];
	"882:CA" -> "882:BS"	 [cond="[]",
		lineno=None];
	"978:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b28733d0>",
		fillcolor=turquoise,
		label="978:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"977:CA" -> "978:BL"	 [cond="[]",
		lineno=None];
	"898:BS" -> "Leaf_895:AL"	 [cond="[]",
		lineno=None];
	"917:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ae5410>",
		fillcolor=firebrick,
		label="917:NS
send_data_r2 <= send_data_r;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ae5410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"916:AL" -> "917:NS"	 [cond="[]",
		lineno=None];
	"Leaf_854:AL"	 [def_var="['tx_valid_r']",
		label="Leaf_854:AL"];
	"Leaf_854:AL" -> "967:AL";
	"1017:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b284c6d0>",
		fillcolor=springgreen,
		label="1017:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1014:BL" -> "1017:IF"	 [cond="[]",
		lineno=None];
	"849:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9710>",
		fillcolor=firebrick,
		label="849:NS
zero_length_r <= send_zero_length_r;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b27c9710>]",
		style=filled,
		typ=NonblockingSubstitution];
	"849:IF" -> "849:NS"	 [cond="['crc16_clr']",
		label=crc16_clr,
		lineno=849];
	"939:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2adefd0>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="939:AS
crc16_rev[13] = ~crc16[10];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"939:AS" -> "895:AL";
	"952:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2aef110>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="952:AS
crc16_rev[0] = ~crc16[7];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"952:AS" -> "895:AL";
	"Leaf_923:AL" -> "943:AS";
	"Leaf_923:AL" -> "938:AS";
	"Leaf_923:AL" -> "946:AS";
	"Leaf_923:AL" -> "951:AS";
	"Leaf_923:AL" -> "950:AS";
	"Leaf_923:AL" -> "942:AS";
	"Leaf_923:AL" -> "939:AS";
	"Leaf_923:AL" -> "952:AS";
	"941:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2adf510>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="941:AS
crc16_rev[11] = ~crc16[12];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"Leaf_923:AL" -> "941:AS";
	"937:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2adead0>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="937:AS
crc16_rev[15] = ~crc16[8];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"Leaf_923:AL" -> "937:AS";
	"948:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ae86d0>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="948:AS
crc16_rev[4] = ~crc16[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"Leaf_923:AL" -> "948:AS";
	"947:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ae8450>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="947:AS
crc16_rev[5] = ~crc16[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"Leaf_923:AL" -> "947:AS";
	"944:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2adfc90>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="944:AS
crc16_rev[8] = ~crc16[15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"Leaf_923:AL" -> "944:AS";
	"949:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ae8950>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="949:AS
crc16_rev[3] = ~crc16[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"Leaf_923:AL" -> "949:AS";
	"945:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2adff10>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="945:AS
crc16_rev[7] = ~crc16[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"Leaf_923:AL" -> "945:AS";
	"940:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2adf290>",
		def_var="['crc16_rev']",
		fillcolor=deepskyblue,
		label="940:AS
crc16_rev[12] = ~crc16[11];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc16']"];
	"Leaf_923:AL" -> "940:AS";
	"914:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ae5150>",
		fillcolor=firebrick,
		label="914:NS
send_data_r <= send_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2ae5150>]",
		style=filled,
		typ=NonblockingSubstitution];
	"914:NS" -> "Leaf_913:AL"	 [cond="[]",
		lineno=None];
	"1039:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b284f110>",
		fillcolor=turquoise,
		label="1039:BL
last = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284f150>]",
		style=filled,
		typ=Block];
	"1039:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"Leaf_869:AL" -> "887:AL";
	"1034:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b284cf10>",
		fillcolor=springgreen,
		label="1034:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1031:BL" -> "1034:IF"	 [cond="[]",
		lineno=None];
	"892:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b27d49d0>",
		fillcolor=springgreen,
		label="892:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"891:AL" -> "892:IF"	 [cond="[]",
		lineno=None];
	"874:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27b5fd0>",
		fillcolor=cadetblue,
		label="874:BS
token_pid = { ~4'b0110, 4'b0110 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27b5fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"874:BS" -> "Leaf_869:AL"	 [cond="[]",
		lineno=None];
	"Leaf_916:AL"	 [def_var="['send_data_r2']",
		label="Leaf_916:AL"];
	"Leaf_916:AL" -> "921:AS";
	"904:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ad6850>",
		def_var="['tx_valid_last']",
		fillcolor=deepskyblue,
		label="904:AS
tx_valid_last = send_token | last;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['send_token', 'last']"];
	"873:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27b5d10>",
		fillcolor=cadetblue,
		label="873:BS
token_pid = { ~4'b1110, 4'b1110 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27b5d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"873:BS" -> "Leaf_869:AL"	 [cond="[]",
		lineno=None];
	"941:AS" -> "895:AL";
	"968:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b2873250>",
		fillcolor=turquoise,
		label="968:BL
next_state = state;
tx_valid_d = 1'b0;
dsel = 1'b0;
rd_next = 1'b0;
last = 1'b0;
crc_sel1 = 1'b0;
crc_sel2 = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2aefa10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2aefb50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2aefc90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2aefdd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2aeff10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b2873090>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b28731d0>]",
		style=filled,
		typ=Block];
	"967:AL" -> "968:BL"	 [cond="[]",
		lineno=None];
	"937:AS" -> "895:AL";
	"948:AS" -> "895:AL";
	"838:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2c05d50>",
		fillcolor=firebrick,
		label="838:NS
send_zero_length_r <= send_zero_length;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f55b2c05d50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"838:NS" -> "Leaf_837:AL"	 [cond="[]",
		lineno=None];
	"888:BS" -> "Leaf_887:AL"	 [cond="[]",
		lineno=None];
	"847:NS" -> "Leaf_843:AL"	 [cond="[]",
		lineno=None];
	"Leaf_851:AL" -> "854:AL";
	"871:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27b5790>",
		fillcolor=cadetblue,
		label="871:BS
token_pid = { ~4'b0010, 4'b0010 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27b5790>]",
		style=filled,
		typ=BlockingSubstitution];
	"871:BS" -> "Leaf_869:AL"	 [cond="[]",
		lineno=None];
	"849:NS" -> "Leaf_843:AL"	 [cond="[]",
		lineno=None];
	"837:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b2c05b10>",
		clk_sens=True,
		fillcolor=gold,
		label="837:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['send_zero_length']"];
	"837:AL" -> "838:NS"	 [cond="[]",
		lineno=None];
	"874:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b27b5dd0>",
		fillcolor=lightcyan,
		label="874:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"874:CA" -> "874:BS"	 [cond="[]",
		lineno=None];
	"864:IF" -> "864:NS"	 [cond="['send_token']",
		label=send_token,
		lineno=864];
	"866:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b27b52d0>",
		fillcolor=springgreen,
		label="866:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"864:IF" -> "866:IF"	 [cond="['send_token']",
		label="!(send_token)",
		lineno=864];
	"893:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27d4ad0>",
		fillcolor=cadetblue,
		label="893:BS
tx_data_data = tx_data_st;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27d4ad0>]",
		style=filled,
		typ=BlockingSubstitution];
	"893:BS" -> "Leaf_891:AL"	 [cond="[]",
		lineno=None];
	"1018:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b284c590>",
		fillcolor=turquoise,
		label="1018:BL
last = 1'b1;
crc_sel2 = 1'b1;
next_state = CRC2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284c490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284c5d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284c710>]",
		style=filled,
		typ=Block];
	"1017:IF" -> "1018:BL"	 [cond="['tx_ready']",
		label=tx_ready,
		lineno=1017];
	"1024:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b284c890>",
		fillcolor=turquoise,
		label="1024:BL
tx_valid_d = 1'b1;
crc_sel1 = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284c8d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b284ca10>]",
		style=filled,
		typ=Block];
	"1017:IF" -> "1024:BL"	 [cond="['tx_ready']",
		label="!(tx_ready)",
		lineno=1017];
	"855:NS" -> "Leaf_854:AL"	 [cond="[]",
		lineno=None];
	"895:AL" -> "896:IF"	 [cond="[]",
		lineno=None];
	"994:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f55b2842350>",
		fillcolor=turquoise,
		label="994:BL
tx_valid_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b28422d0>]",
		style=filled,
		typ=Block];
	"994:BL" -> "999:IF"	 [cond="[]",
		lineno=None];
	"995:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f55b2842090>",
		fillcolor=springgreen,
		label="995:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"994:BL" -> "995:IF"	 [cond="[]",
		lineno=None];
	"980:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"947:AS" -> "895:AL";
	"944:AS" -> "895:AL";
	"1018:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"Leaf_887:AL" -> "901:AS";
	"870:CS" -> "872:CA"	 [cond="['token_pid_sel']",
		label=token_pid_sel,
		lineno=870];
	"870:CS" -> "874:CA"	 [cond="['token_pid_sel']",
		label=token_pid_sel,
		lineno=870];
	"871:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b27b5590>",
		fillcolor=lightcyan,
		label="871:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"870:CS" -> "871:CA"	 [cond="['token_pid_sel']",
		label=token_pid_sel,
		lineno=870];
	"873:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f55b27b5b50>",
		fillcolor=lightcyan,
		label="873:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"870:CS" -> "873:CA"	 [cond="['token_pid_sel']",
		label=token_pid_sel,
		lineno=870];
	"843:AL" -> "845:IF"	 [cond="[]",
		lineno=None];
	"880:BS" -> "Leaf_877:AL"	 [cond="[]",
		lineno=None];
	"993:CA" -> "994:BL"	 [cond="[]",
		lineno=None];
	"879:BS" -> "Leaf_877:AL"	 [cond="[]",
		lineno=None];
	"866:IF" -> "866:NS"	 [cond="['tx_ready']",
		label=tx_ready,
		lineno=866];
	"968:BL" -> "976:CS"	 [cond="[]",
		lineno=None];
	"949:AS" -> "895:AL";
	"995:IF" -> "996:BS"	 [cond="['tx_ready', 'tx_valid_r']",
		label="(tx_ready && tx_valid_r)",
		lineno=995];
	"978:BL" -> "979:IF"	 [cond="[]",
		lineno=None];
	"892:IF" -> "893:BS"	 [cond="['dsel']",
		label="!(dsel)",
		lineno=892];
	"892:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27d4910>",
		fillcolor=cadetblue,
		label="892:BS
tx_data_data = tx_spec_data;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f55b27d4910>]",
		style=filled,
		typ=BlockingSubstitution];
	"892:IF" -> "892:BS"	 [cond="['dsel']",
		label=dsel,
		lineno=892];
	"905:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f55b2ad6990>",
		def_var="['tx_valid']",
		fillcolor=deepskyblue,
		label="905:AS
tx_valid = tx_valid_d;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['tx_valid_d']"];
	"905:AS" -> "851:AL";
	"Leaf_907:AL"	 [def_var="['tx_first_r']",
		label="Leaf_907:AL"];
	"Leaf_907:AL" -> "910:AS";
	"962:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b2aef290>",
		clk_sens=True,
		fillcolor=gold,
		label="962:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'next_state']"];
	"962:AL" -> "964:IF"	 [cond="[]",
		lineno=None];
	"1007:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"Leaf_843:AL" -> "921:AS";
	"Leaf_877:AL" -> "895:AL";
	"945:AS" -> "895:AL";
	"926:IF" -> "926:NS"	 [cond="['crc16_add']",
		label=crc16_add,
		lineno=926];
	"921:AS" -> "923:AL";
	"Leaf_967:AL" -> "891:AL";
	"Leaf_967:AL" -> "904:AS";
	"Leaf_967:AL" -> "895:AL";
	"Leaf_967:AL" -> "843:AL";
	"Leaf_967:AL" -> "905:AS";
	"Leaf_967:AL" -> "962:AL";
	"Leaf_967:AL" -> "921:AS";
	"1034:IF" -> "1035:BL"	 [cond="['tx_ready']",
		label=tx_ready,
		lineno=1034];
	"1034:IF" -> "1039:BL"	 [cond="['tx_ready']",
		label="!(tx_ready)",
		lineno=1034];
	"917:NS" -> "Leaf_916:AL"	 [cond="[]",
		lineno=None];
	"986:IF" -> "987:BL"	 [cond="['send_data']",
		label=send_data,
		lineno=986];
	"871:CA" -> "871:BS"	 [cond="[]",
		lineno=None];
	"860:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b27c9c10>",
		clk_sens=True,
		fillcolor=gold,
		label="860:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'tx_ready', 'send_token']"];
	"860:AL" -> "862:IF"	 [cond="[]",
		lineno=None];
	"892:BS" -> "Leaf_891:AL"	 [cond="[]",
		lineno=None];
	"908:NS" -> "Leaf_907:AL"	 [cond="[]",
		lineno=None];
	"940:AS" -> "895:AL";
	"913:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f55b2ad6f10>",
		clk_sens=True,
		fillcolor=gold,
		label="913:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['send_data']"];
	"913:AL" -> "914:NS"	 [cond="[]",
		lineno=None];
	"1024:BL" -> "Leaf_967:AL"	 [cond="[]",
		lineno=None];
	"873:CA" -> "873:BS"	 [cond="[]",
		lineno=None];
}
