strict digraph "compose( ,  )" {
	node [label="\N"];
	"1461:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fbd090>",
		fillcolor=cadetblue,
		label="1461:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fbd090>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_1403:AL"	 [def_var="['got_pid_ack', 'data_done', 'seq_err', 'token_le_1', 'token_le_2', 'pid_le_sm', 'data_valid_d', 'next_state']",
		label="Leaf_1403:AL"];
	"1461:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1421:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fb1cd0>",
		fillcolor=turquoise,
		label="1421:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1423:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fb9390>",
		fillcolor=springgreen,
		label="1423:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1421:BL" -> "1423:IF"	 [cond="[]",
		lineno=None];
	"1346:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9fcd8d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1346:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'rxv1', 'data_valid_d', 'data_done']"];
	"1348:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fcdc50>",
		fillcolor=springgreen,
		label="1348:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1346:AL" -> "1348:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1357:AL"	 [def_var="['d2', 'd0', 'd1']",
		label="Leaf_1357:AL"];
	"1357:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9f94550>",
		clk_sens=True,
		fillcolor=gold,
		label="1357:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_valid_d', 'rx_data', 'd0', 'd1']"];
	"Leaf_1357:AL" -> "1357:AL";
	"1364:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f94c90>",
		def_var="['rx_data_st']",
		fillcolor=deepskyblue,
		label="1364:AS
rx_data_st = d2;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['d2']"];
	"Leaf_1357:AL" -> "1364:AS";
	"1348:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcdc10>",
		fillcolor=firebrick,
		label="1348:NS
rxv2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcdc10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1346:AL"	 [def_var="['rxv2']",
		label="Leaf_1346:AL"];
	"1348:NS" -> "Leaf_1346:AL"	 [cond="[]",
		lineno=None];
	"1466:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fbd390>",
		fillcolor=cadetblue,
		label="1466:BS
data_valid_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fbd390>]",
		style=filled,
		typ=BlockingSubstitution];
	"1466:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1403:AL" -> "1346:AL";
	"1335:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9fcd350>",
		clk_sens=True,
		fillcolor=gold,
		label="1335:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'data_valid_d', 'data_done']"];
	"Leaf_1403:AL" -> "1335:AL";
	"1354:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9fcdb50>",
		clk_sens=True,
		fillcolor=gold,
		label="1354:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rxv2', 'data_valid_d']"];
	"Leaf_1403:AL" -> "1354:AL";
	"1366:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f94f90>",
		def_var="['rx_data_done']",
		fillcolor=deepskyblue,
		label="1366:AS
rx_data_done = data_done;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_done']"];
	"Leaf_1403:AL" -> "1366:AS";
	"1253:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f4dd90>",
		def_var="['pid_ld_en']",
		fillcolor=deepskyblue,
		label="1253:AS
pid_ld_en = pid_le_sm & rx_active & rx_valid;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid_le_sm', 'rx_active', 'rx_valid']"];
	"Leaf_1403:AL" -> "1253:AS";
	"Leaf_1403:AL" -> "1357:AL";
	"1388:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9fae410>",
		def_var="['crc16_err']",
		fillcolor=deepskyblue,
		label="1388:AS
crc16_err = data_done & (crc16_sum != 16'h800d);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_done', 'crc16_sum']"];
	"Leaf_1403:AL" -> "1388:AS";
	"1294:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13ca250d10>",
		clk_sens=True,
		fillcolor=gold,
		label="1294:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_le_2']"];
	"Leaf_1403:AL" -> "1294:AL";
	"1398:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9fae590>",
		clk_sens=True,
		fillcolor=gold,
		label="1398:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'next_state']"];
	"Leaf_1403:AL" -> "1398:AL";
	"1297:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9fa70d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1297:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['got_pid_ack', 'token_valid_r1']"];
	"Leaf_1403:AL" -> "1297:AL";
	"1376:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9f9b5d0>",
		clk_sens=True,
		fillcolor=gold,
		label="1376:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_valid_d', 'crc16_out', 'crc16_clr']"];
	"Leaf_1403:AL" -> "1376:AL";
	"1291:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13ca250c50>",
		clk_sens=True,
		fillcolor=gold,
		label="1291:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_le_2', 'rx_data']"];
	"Leaf_1403:AL" -> "1291:AL";
	"1288:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13ca250950>",
		clk_sens=True,
		fillcolor=gold,
		label="1288:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['token_le_1', 'rx_data']"];
	"Leaf_1403:AL" -> "1288:AL";
	"1337:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fcd550>",
		fillcolor=springgreen,
		label="1337:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1335:AL" -> "1337:IF"	 [cond="[]",
		lineno=None];
	"u1.747:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f870d0>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.747:AS
crc_out[4] = din[3] ^ din[2] ^ crc_in[10] ^ crc_in[11];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'crc_in', 'crc_in']"];
	"u1.747:AS" -> "1376:AL";
	"1468:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fbd710>",
		fillcolor=turquoise,
		label="1468:BL
data_done = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fbd690>]",
		style=filled,
		typ=Block];
	"1470:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fbd850>",
		fillcolor=springgreen,
		label="1470:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1468:BL" -> "1470:IF"	 [cond="[]",
		lineno=None];
	"1361:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94b90>",
		fillcolor=firebrick,
		label="1361:NS
d2 <= d1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94b90>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1361:NS" -> "Leaf_1357:AL"	 [cond="[]",
		lineno=None];
	"1437:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fb9ed0>",
		fillcolor=springgreen,
		label="1437:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1443:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fa2210>",
		fillcolor=springgreen,
		label="1443:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1437:IF" -> "1443:IF"	 [cond="['pid_DATA', 'rx_valid', 'rx_active', 'rx_err']",
		label="!((pid_DATA && rx_valid && rx_active && !rx_err))",
		lineno=1437];
	"1438:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fb9d90>",
		fillcolor=turquoise,
		label="1438:BL
data_valid_d = 1'b1;
next_state = DATA;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb9dd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb9f10>]",
		style=filled,
		typ=Block];
	"1437:IF" -> "1438:BL"	 [cond="['pid_DATA', 'rx_valid', 'rx_active', 'rx_err']",
		label="(pid_DATA && rx_valid && rx_active && !rx_err)",
		lineno=1437];
	"1292:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13ca250b90>",
		fillcolor=springgreen,
		label="1292:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1292:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13ca250dd0>",
		fillcolor=firebrick,
		label="1292:NS
token1 <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13ca250dd0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1292:IF" -> "1292:NS"	 [cond="['token_le_2']",
		label=token_le_2,
		lineno=1292];
	"Leaf_1354:AL"	 [def_var="['data_valid0']",
		label="Leaf_1354:AL"];
	"1365:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f94e10>",
		def_var="['rx_data_valid']",
		fillcolor=deepskyblue,
		label="1365:AS
rx_data_valid = data_valid0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_valid0']"];
	"Leaf_1354:AL" -> "1365:AS";
	"u0.1126:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca36aa50>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u0.1126:AS
crc_out[0] = din[10] ^ din[9] ^ din[6] ^ din[5] ^ din[3] ^ din[0] ^ crc_in[0] ^ crc_in[3] ^ crc_in[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'din', 'din', 'din', 'din', 'crc_in', 'crc_in', 'crc_in']"];
	"1322:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9fab710>",
		def_var="['crc5_out2']",
		fillcolor=deepskyblue,
		label="1322:AS
crc5_out2 = ~{ crc5_out[0], crc5_out[1], crc5_out[2], crc5_out[3], crc5_out[4] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc5_out', 'crc5_out', 'crc5_out', 'crc5_out', 'crc5_out']"];
	"u0.1126:AS" -> "1322:AS";
	"u1.746:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f51b50>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.746:AS
crc_out[3] = din[2] ^ din[1] ^ crc_in[9] ^ crc_in[10];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'crc_in', 'crc_in']"];
	"u1.746:AS" -> "1376:AL";
	"1372:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f9b1d0>",
		fillcolor=firebrick,
		label="1372:NS
rx_active_r <= rx_active;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f9b1d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1371:AL"	 [def_var="['rx_active_r']",
		label="Leaf_1371:AL"];
	"1372:NS" -> "Leaf_1371:AL"	 [cond="[]",
		lineno=None];
	"1268:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca235e10>",
		def_var="['pid_SOF']",
		fillcolor=deepskyblue,
		label="1268:AS
pid_SOF = pid[3:0] == 4'b0101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1284:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca250390>",
		def_var="['pid_TOKEN']",
		fillcolor=deepskyblue,
		label="1284:AS
pid_TOKEN = pid_OUT | pid_IN | pid_SOF | pid_SETUP | pid_PING;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid_OUT', 'pid_IN', 'pid_SOF', 'pid_SETUP', 'pid_PING']"];
	"1268:AS" -> "1284:AS";
	"1405:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fb1790>",
		fillcolor=turquoise,
		label="1405:BL
next_state = state;
pid_le_sm = 1'b0;
token_le_1 = 1'b0;
token_le_2 = 1'b0;
data_valid_d = 1'b0;
data_done = 1'b0;
seq_err = \
1'b0;
got_pid_ack = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9faedd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9faef10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb1090>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb11d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb1350>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb1490>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb15d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb1710>]",
		style=filled,
		typ=Block];
	"1414:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f13c9fb9250>",
		fillcolor=linen,
		label="1414:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"1405:BL" -> "1414:CS"	 [cond="[]",
		lineno=None];
	"1424:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fb9190>",
		fillcolor=turquoise,
		label="1424:BL
got_pid_ack = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb9110>]",
		style=filled,
		typ=Block];
	"1423:IF" -> "1424:BL"	 [cond="['pid_ACK', 'rx_err']",
		label="(pid_ACK && !rx_err)",
		lineno=1423];
	"1430:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fb99d0>",
		fillcolor=springgreen,
		label="1430:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1423:IF" -> "1430:IF"	 [cond="['pid_ACK', 'rx_err']",
		label="!((pid_ACK && !rx_err))",
		lineno=1423];
	"Leaf_1294:AL"	 [def_var="['token_valid_r1']",
		label="Leaf_1294:AL"];
	"Leaf_1294:AL" -> "1297:AL";
	"1355:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94350>",
		fillcolor=firebrick,
		label="1355:NS
data_valid0 <= rxv2 & data_valid_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94350>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1354:AL" -> "1355:NS"	 [cond="[]",
		lineno=None];
	"1304:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9fa77d0>",
		def_var="['crc5_err']",
		fillcolor=deepskyblue,
		label="1304:AS
crc5_err = token_valid & (crc5_out2 != token_crc5);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token_valid', 'crc5_out2', 'token_crc5']"];
	"1322:AS" -> "1304:AS";
	"1269:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca23a0d0>",
		def_var="['pid_SETUP']",
		fillcolor=deepskyblue,
		label="1269:AS
pid_SETUP = pid[3:0] == 4'b1101;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1269:AS" -> "1284:AS";
	"1348:IF" -> "1348:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1348];
	"1350:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fcdf90>",
		fillcolor=springgreen,
		label="1350:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1348:IF" -> "1350:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1348];
	"1298:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fa73d0>",
		fillcolor=firebrick,
		label="1298:NS
token_valid_str1 <= token_valid_r1 | got_pid_ack;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fa73d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1297:AL"	 [def_var="['token_valid_str1']",
		label="Leaf_1297:AL"];
	"1298:NS" -> "Leaf_1297:AL"	 [cond="[]",
		lineno=None];
	"1453:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fa28d0>",
		fillcolor=turquoise,
		label="1453:BL
token_le_2 = 1'b1;
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fa2890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fa2a10>]",
		style=filled,
		typ=Block];
	"1453:BL" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1426:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fb92d0>",
		fillcolor=springgreen,
		label="1426:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1424:BL" -> "1426:IF"	 [cond="[]",
		lineno=None];
	"1426:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb93d0>",
		fillcolor=cadetblue,
		label="1426:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb93d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"1426:IF" -> "1426:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1426];
	"1276:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca24d290>",
		def_var="['pid_STALL']",
		fillcolor=deepskyblue,
		label="1276:AS
pid_STALL = pid[3:0] == 4'b1110;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1415:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13c9fb18d0>",
		fillcolor=lightcyan,
		label="1415:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1416:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fb1a90>",
		fillcolor=turquoise,
		label="1416:BL
pid_le_sm = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb1a10>]",
		style=filled,
		typ=Block];
	"1415:CA" -> "1416:BL"	 [cond="[]",
		lineno=None];
	"1300:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9fa7590>",
		def_var="['token_valid']",
		fillcolor=deepskyblue,
		label="1300:AS
token_valid = token_valid_str1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token_valid_str1']"];
	"1300:AS" -> "1304:AS";
	"u0.1136:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca35ce90>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u0.1136:AS
crc_out[3] = din[10] ^ din[9] ^ din[8] ^ din[7] ^ din[4] ^ din[3] ^ din[1] ^ crc_in[1] ^ crc_in[2] ^ crc_in[3] ^ crc_\
in[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'din', 'din', 'din', 'din', 'din', 'crc_in', 'crc_in', 'crc_in', 'crc_in']"];
	"u0.1136:AS" -> "1322:AS";
	"1352:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9f94110>",
		fillcolor=springgreen,
		label="1352:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1352:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94210>",
		fillcolor=firebrick,
		label="1352:NS
rxv2 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94210>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1352:IF" -> "1352:NS"	 [cond="['data_done']",
		label=data_done,
		lineno=1352];
	"u1.754:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f85fd0>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.754:AS
crc_out[11] = crc_in[3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_in']"];
	"u1.754:AS" -> "1376:AL";
	"1260:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13ca2351d0>",
		fillcolor=springgreen,
		label="1260:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1262:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13ca235310>",
		fillcolor=springgreen,
		label="1262:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1260:IF" -> "1262:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1260];
	"1260:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13ca235190>",
		fillcolor=firebrick,
		label="1260:NS
pid <= 8'hf0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13ca235190>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1260:IF" -> "1260:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1260];
	"u1.755:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f86250>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.755:AS
crc_out[12] = crc_in[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_in']"];
	"u1.755:AS" -> "1376:AL";
	"1418:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fb1c10>",
		fillcolor=springgreen,
		label="1418:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1416:BL" -> "1418:IF"	 [cond="[]",
		lineno=None];
	"1379:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f9ba10>",
		fillcolor=firebrick,
		label="1379:NS
crc16_sum <= crc16_out;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f9ba10>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1376:AL"	 [def_var="['crc16_sum']",
		label="Leaf_1376:AL"];
	"1379:NS" -> "Leaf_1376:AL"	 [cond="[]",
		lineno=None];
	"1258:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9f4df90>",
		clk_sens=True,
		fillcolor=gold,
		label="1258:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rst', 'rx_data', 'pid_ld_en']"];
	"1253:AS" -> "1258:AL";
	"1258:AL" -> "1260:IF"	 [cond="[]",
		lineno=None];
	"1418:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb1d10>",
		fillcolor=cadetblue,
		label="1418:BS
next_state = ACTIVE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb1d10>]",
		style=filled,
		typ=BlockingSubstitution];
	"1418:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1400:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fae750>",
		fillcolor=firebrick,
		label="1400:NS
state <= IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fae750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1398:AL"	 [def_var="['state']",
		label="Leaf_1398:AL"];
	"1400:NS" -> "Leaf_1398:AL"	 [cond="[]",
		lineno=None];
	"1272:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca23a850>",
		def_var="['pid_DATA2']",
		fillcolor=deepskyblue,
		label="1272:AS
pid_DATA2 = pid[3:0] == 4'b0111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1285:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca2506d0>",
		def_var="['pid_DATA']",
		fillcolor=deepskyblue,
		label="1285:AS
pid_DATA = pid_DATA0 | pid_DATA1 | pid_DATA2 | pid_MDATA;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid_DATA0', 'pid_DATA1', 'pid_DATA2', 'pid_MDATA']"];
	"1272:AS" -> "1285:AS";
	"1377:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f9b750>",
		fillcolor=firebrick,
		label="1377:NS
crc16_sum <= 16'hffff;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f9b750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1377:NS" -> "Leaf_1376:AL"	 [cond="[]",
		lineno=None];
	"1279:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca24da10>",
		def_var="['pid_ERR']",
		fillcolor=deepskyblue,
		label="1279:AS
pid_ERR = pid[3:0] == 4'b1100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1273:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca23aad0>",
		def_var="['pid_MDATA']",
		fillcolor=deepskyblue,
		label="1273:AS
pid_MDATA = pid[3:0] == 4'b1111;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1273:AS" -> "1285:AS";
	"1262:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13ca235410>",
		fillcolor=firebrick,
		label="1262:NS
pid <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13ca235410>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1262:IF" -> "1262:NS"	 [cond="['pid_ld_en']",
		label=pid_ld_en,
		lineno=1262];
	"1352:NS" -> "Leaf_1346:AL"	 [cond="[]",
		lineno=None];
	"u1.749:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f87b50>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.749:AS
crc_out[6] = din[5] ^ din[4] ^ crc_in[12] ^ crc_in[13];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'crc_in', 'crc_in']"];
	"u1.749:AS" -> "1376:AL";
	"1445:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fa2550>",
		fillcolor=turquoise,
		label="1445:BL
seq_err = !rx_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fa24d0>]",
		style=filled,
		typ=Block];
	"1443:IF" -> "1445:BL"	 [cond="['rx_active', 'rx_err', 'rx_valid', 'pid_TOKEN', 'pid_DATA']",
		label="(!rx_active || rx_err || rx_valid && !(pid_TOKEN || pid_DATA))",
		lineno=1443];
	"1426:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1328:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9fcd190>",
		def_var="['token_crc5']",
		fillcolor=deepskyblue,
		label="1328:AS
token_crc5 = token1[7:3];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token1']"];
	"1328:AS" -> "1304:AS";
	"1339:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcd7d0>",
		fillcolor=firebrick,
		label="1339:NS
rxv1 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcd7d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1335:AL"	 [def_var="['rxv1']",
		label="Leaf_1335:AL"];
	"1339:NS" -> "Leaf_1335:AL"	 [cond="[]",
		lineno=None];
	"1359:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94750>",
		fillcolor=firebrick,
		label="1359:NS
d0 <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94750>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1359:NS" -> "Leaf_1357:AL"	 [cond="[]",
		lineno=None];
	"1281:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca24df10>",
		def_var="['pid_PING']",
		fillcolor=deepskyblue,
		label="1281:AS
pid_PING = pid[3:0] == 4'b0100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1281:AS" -> "1284:AS";
	"u1.750:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f850d0>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.750:AS
crc_out[7] = din[6] ^ din[5] ^ crc_in[13] ^ crc_in[14];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'crc_in', 'crc_in']"];
	"u1.750:AS" -> "1376:AL";
	"1358:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9f94a10>",
		fillcolor=turquoise,
		label="1358:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1357:AL" -> "1358:BL"	 [cond="[]",
		lineno=None];
	"1438:BL" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1360:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94990>",
		fillcolor=firebrick,
		label="1360:NS
d1 <= d0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9f94990>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1360:NS" -> "Leaf_1357:AL"	 [cond="[]",
		lineno=None];
	"1341:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcda50>",
		fillcolor=firebrick,
		label="1341:NS
rxv1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcda50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1341:NS" -> "Leaf_1335:AL"	 [cond="[]",
		lineno=None];
	"1361:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9f94a90>",
		fillcolor=springgreen,
		label="1361:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1361:IF" -> "1361:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1361];
	"u1.758:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f84950>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.758:AS
crc_out[15] = din[7] ^ din[6] ^ din[5] ^ din[4] ^ din[3] ^ din[2] ^ din[1] ^ din[0] ^ crc_in[7] ^ crc_in[8] ^ crc_in[9] ^ \
crc_in[10] ^ crc_in[11] ^ crc_in[12] ^ crc_in[13] ^ crc_in[14] ^ crc_in[15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'din', 'din', 'din', 'din', 'din', 'din', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in', '\
crc_in', 'crc_in']"];
	"u1.758:AS" -> "1376:AL";
	"1358:BL" -> "1361:IF"	 [cond="[]",
		lineno=None];
	"1360:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9f94890>",
		fillcolor=springgreen,
		label="1360:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1358:BL" -> "1360:IF"	 [cond="[]",
		lineno=None];
	"1359:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9f94490>",
		fillcolor=springgreen,
		label="1359:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1358:BL" -> "1359:IF"	 [cond="[]",
		lineno=None];
	"1271:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca23a5d0>",
		def_var="['pid_DATA1']",
		fillcolor=deepskyblue,
		label="1271:AS
pid_DATA1 = pid[3:0] == 4'b1011;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1271:AS" -> "1285:AS";
	"1275:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca23afd0>",
		def_var="['pid_NACK']",
		fillcolor=deepskyblue,
		label="1275:AS
pid_NACK = pid[3:0] == 4'b1010;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1339:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fcd810>",
		fillcolor=springgreen,
		label="1339:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1339:IF" -> "1339:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1339];
	"1341:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fcd950>",
		fillcolor=springgreen,
		label="1341:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1339:IF" -> "1341:IF"	 [cond="['data_valid_d']",
		label="!(data_valid_d)",
		lineno=1339];
	"Leaf_1291:AL"	 [def_var="['token1']",
		label="Leaf_1291:AL"];
	"1292:NS" -> "Leaf_1291:AL"	 [cond="[]",
		lineno=None];
	"1374:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f9b410>",
		def_var="['crc16_clr']",
		fillcolor=deepskyblue,
		label="1374:AS
crc16_clr = rx_active & !rx_active_r;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['rx_active', 'rx_active_r']"];
	"1374:AS" -> "1376:AL";
	"1278:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca24d790>",
		def_var="['pid_PRE']",
		fillcolor=deepskyblue,
		label="1278:AS
pid_PRE = pid[3:0] == 4'b1100;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1270:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca23a350>",
		def_var="['pid_DATA0']",
		fillcolor=deepskyblue,
		label="1270:AS
pid_DATA0 = pid[3:0] == 4'b0011;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1270:AS" -> "1285:AS";
	"u1.742:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f510d0>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.742:AS
crc_out[1] = din[7] ^ din[6] ^ din[5] ^ din[4] ^ din[3] ^ din[2] ^ din[1] ^ crc_in[9] ^ crc_in[10] ^ crc_in[11] ^ crc_\
in[12] ^ crc_in[13] ^ crc_in[14] ^ crc_in[15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'din', 'din', 'din', 'din', 'din', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in']"];
	"u1.742:AS" -> "1376:AL";
	"1295:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fa7050>",
		fillcolor=firebrick,
		label="1295:NS
token_valid_r1 <= token_le_2;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fa7050>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1294:AL" -> "1295:NS"	 [cond="[]",
		lineno=None];
	"1470:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fbd950>",
		fillcolor=cadetblue,
		label="1470:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fbd950>]",
		style=filled,
		typ=BlockingSubstitution];
	"1470:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"Leaf_1297:AL" -> "1300:AS";
	"1371:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9f94f50>",
		clk_sens=True,
		fillcolor=gold,
		label="1371:AL",
		sens="['clk']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_active']"];
	"1371:AL" -> "1372:NS"	 [cond="[]",
		lineno=None];
	"u1.748:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f87610>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.748:AS
crc_out[5] = din[4] ^ din[3] ^ crc_in[11] ^ crc_in[12];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'crc_in', 'crc_in']"];
	"u1.748:AS" -> "1376:AL";
	"1459:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fa2e50>",
		fillcolor=turquoise,
		label="1459:BL
seq_err = !rx_err;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fa2dd0>]",
		style=filled,
		typ=Block];
	"1461:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fa2f50>",
		fillcolor=springgreen,
		label="1461:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1459:BL" -> "1461:IF"	 [cond="[]",
		lineno=None];
	"Leaf_1371:AL" -> "1374:AS";
	"1350:IF" -> "1352:IF"	 [cond="['rxv1', 'data_valid_d']",
		label="!((rxv1 && data_valid_d))",
		lineno=1350];
	"1350:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcdf50>",
		fillcolor=firebrick,
		label="1350:NS
rxv2 <= 1'b1;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcdf50>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1350:IF" -> "1350:NS"	 [cond="['rxv1', 'data_valid_d']",
		label="(rxv1 && data_valid_d)",
		lineno=1350];
	"1360:IF" -> "1360:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1360];
	"1403:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f13c9faed50>",
		clk_sens=False,
		fillcolor=gold,
		label="1403:AL",
		sens="['state', 'rx_valid', 'rx_active', 'rx_err', 'pid_ACK', 'pid_TOKEN', 'pid_DATA']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['rx_err', 'rx_valid', 'state', 'rx_active', 'pid_TOKEN', 'pid_DATA', 'pid_ACK']"];
	"1284:AS" -> "1403:AL";
	"Leaf_1398:AL" -> "1403:AL";
	"1400:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fae790>",
		fillcolor=springgreen,
		label="1400:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1398:AL" -> "1400:IF"	 [cond="[]",
		lineno=None];
	"u1.752:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f85b50>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.752:AS
crc_out[9] = din[7] ^ crc_in[1] ^ crc_in[15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'crc_in', 'crc_in']"];
	"u1.752:AS" -> "1376:AL";
	"1458:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fa2c50>",
		fillcolor=springgreen,
		label="1458:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1458:IF" -> "1459:BL"	 [cond="['rx_active', 'rx_err']",
		label="(!rx_active || rx_err)",
		lineno=1458];
	"1470:IF" -> "1470:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1470];
	"1447:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fa2750>",
		fillcolor=cadetblue,
		label="1447:BS
next_state = IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fa2750>]",
		style=filled,
		typ=BlockingSubstitution];
	"1447:BS" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"u1.751:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f85710>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.751:AS
crc_out[8] = din[7] ^ din[6] ^ crc_in[0] ^ crc_in[14] ^ crc_in[15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'crc_in', 'crc_in', 'crc_in']"];
	"u1.751:AS" -> "1376:AL";
	"1280:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca24dc90>",
		def_var="['pid_SPLIT']",
		fillcolor=deepskyblue,
		label="1280:AS
pid_SPLIT = pid[3:0] == 4'b1000;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1376:AL" -> "1388:AS";
	"Leaf_1335:AL" -> "1346:AL";
	"1447:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fa2650>",
		fillcolor=springgreen,
		label="1447:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1445:BL" -> "1447:IF"	 [cond="[]",
		lineno=None];
	"1295:NS" -> "Leaf_1294:AL"	 [cond="[]",
		lineno=None];
	"1467:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fbd550>",
		fillcolor=springgreen,
		label="1467:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1467:IF" -> "1468:BL"	 [cond="['rx_active', 'rx_err']",
		label="(!rx_active || rx_err)",
		lineno=1467];
	"1325:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9faba50>",
		def_var="['frame_no']",
		fillcolor=deepskyblue,
		label="1325:AS
frame_no = { token1[2:0], token0 };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token1', 'token0']"];
	"1264:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca235710>",
		def_var="['pid_cks_err']",
		fillcolor=deepskyblue,
		label="1264:AS
pid_cks_err = pid[3:0] != ~pid[7:4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid', 'pid']"];
	"1274:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca23ad50>",
		def_var="['pid_ACK']",
		fillcolor=deepskyblue,
		label="1274:AS
pid_ACK = pid[3:0] == 4'b0010;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"1274:AS" -> "1403:AL";
	"1337:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcd510>",
		fillcolor=firebrick,
		label="1337:NS
rxv1 <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fcd510>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1337:NS" -> "Leaf_1335:AL"	 [cond="[]",
		lineno=None];
	"1450:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13c9fb9150>",
		fillcolor=lightcyan,
		label="1450:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1451:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fb9650>",
		fillcolor=turquoise,
		label="1451:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1450:CA" -> "1451:BL"	 [cond="[]",
		lineno=None];
	"1420:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13c9fb1d50>",
		fillcolor=lightcyan,
		label="1420:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1420:CA" -> "1421:BL"	 [cond="[]",
		lineno=None];
	"1465:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fbd410>",
		fillcolor=turquoise,
		label="1465:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"1465:BL" -> "1467:IF"	 [cond="[]",
		lineno=None];
	"1466:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fbd290>",
		fillcolor=springgreen,
		label="1466:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1465:BL" -> "1466:IF"	 [cond="[]",
		lineno=None];
	"1350:NS" -> "Leaf_1346:AL"	 [cond="[]",
		lineno=None];
	"1461:IF" -> "1461:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1461];
	"1327:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9fabf50>",
		def_var="['token_endp']",
		fillcolor=deepskyblue,
		label="1327:AS
token_endp = { token1[2:0], token0[7] };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token1', 'token0']"];
	"1327:AS" -> "u0.1126:AS";
	"1327:AS" -> "u0.1136:AS";
	"u0.1129:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca3513d0>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u0.1129:AS
crc_out[1] = din[10] ^ din[7] ^ din[6] ^ din[4] ^ din[1] ^ crc_in[0] ^ crc_in[1] ^ crc_in[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'din', 'din', 'din', 'crc_in', 'crc_in', 'crc_in']"];
	"1327:AS" -> "u0.1129:AS";
	"u0.1132:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca35c250>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u0.1132:AS
crc_out[2] = din[10] ^ din[9] ^ din[8] ^ din[7] ^ din[6] ^ din[3] ^ din[2] ^ din[0] ^ crc_in[0] ^ crc_in[1] ^ crc_in[\
2] ^ crc_in[3] ^ crc_in[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'din', 'din', 'din', 'din', 'din', 'din', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in']"];
	"1327:AS" -> "u0.1132:AS";
	"u0.1139:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca35f910>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u0.1139:AS
crc_out[4] = din[10] ^ din[9] ^ din[8] ^ din[5] ^ din[4] ^ din[2] ^ crc_in[2] ^ crc_in[3] ^ crc_in[4];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'din', 'din', 'din', 'din', 'crc_in', 'crc_in', 'crc_in']"];
	"1327:AS" -> "u0.1139:AS";
	"u1.753:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f85d90>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.753:AS
crc_out[10] = crc_in[2];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_in']"];
	"u1.753:AS" -> "1376:AL";
	"1414:CS" -> "1415:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1414:CS" -> "1450:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1414:CS" -> "1420:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1464:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f13c9fa2a90>",
		fillcolor=lightcyan,
		label="1464:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"1414:CS" -> "1464:CA"	 [cond="['state']",
		label=state,
		lineno=1414];
	"1289:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13ca250ad0>",
		fillcolor=firebrick,
		label="1289:NS
token0 <= rx_data;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13ca250ad0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"Leaf_1288:AL"	 [def_var="['token0']",
		label="Leaf_1288:AL"];
	"1289:NS" -> "Leaf_1288:AL"	 [cond="[]",
		lineno=None];
	"u1.745:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f51610>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.745:AS
crc_out[2] = din[1] ^ din[0] ^ crc_in[8] ^ crc_in[9];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'crc_in', 'crc_in']"];
	"u1.745:AS" -> "1376:AL";
	"Leaf_1258:AL"	 [def_var="['pid']",
		label="Leaf_1258:AL"];
	"Leaf_1258:AL" -> "1268:AS";
	"Leaf_1258:AL" -> "1269:AS";
	"Leaf_1258:AL" -> "1276:AS";
	"Leaf_1258:AL" -> "1272:AS";
	"Leaf_1258:AL" -> "1279:AS";
	"Leaf_1258:AL" -> "1273:AS";
	"Leaf_1258:AL" -> "1281:AS";
	"Leaf_1258:AL" -> "1271:AS";
	"Leaf_1258:AL" -> "1275:AS";
	"Leaf_1258:AL" -> "1278:AS";
	"Leaf_1258:AL" -> "1270:AS";
	"Leaf_1258:AL" -> "1280:AS";
	"Leaf_1258:AL" -> "1264:AS";
	"Leaf_1258:AL" -> "1274:AS";
	"1277:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca24d510>",
		def_var="['pid_NYET']",
		fillcolor=deepskyblue,
		label="1277:AS
pid_NYET = pid[3:0] == 4'b0110;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1258:AL" -> "1277:AS";
	"1266:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca235910>",
		def_var="['pid_OUT']",
		fillcolor=deepskyblue,
		label="1266:AS
pid_OUT = pid[3:0] == 4'b0001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1258:AL" -> "1266:AS";
	"1282:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca2501d0>",
		def_var="['pid_RES']",
		fillcolor=deepskyblue,
		label="1282:AS
pid_RES = pid[3:0] == 4'b0000;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1258:AL" -> "1282:AS";
	"1267:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13ca235b90>",
		def_var="['pid_IN']",
		fillcolor=deepskyblue,
		label="1267:AS
pid_IN = pid[3:0] == 4'b1001;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['pid']"];
	"Leaf_1258:AL" -> "1267:AS";
	"u0.1129:AS" -> "1322:AS";
	"Leaf_1346:AL" -> "1354:AL";
	"Leaf_1288:AL" -> "1325:AS";
	"Leaf_1288:AL" -> "1327:AS";
	"1326:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9fabc50>",
		def_var="['token_fadr']",
		fillcolor=deepskyblue,
		label="1326:AS
token_fadr = token0[6:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['token0']"];
	"Leaf_1288:AL" -> "1326:AS";
	"1285:AS" -> "1403:AL";
	"1341:IF" -> "1341:NS"	 [cond="['data_done']",
		label=data_done,
		lineno=1341];
	"1452:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9fa29d0>",
		fillcolor=springgreen,
		label="1452:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1452:IF" -> "1453:BL"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="(rx_valid && rx_active && !rx_err)",
		lineno=1452];
	"1452:IF" -> "1458:IF"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="!((rx_valid && rx_active && !rx_err))",
		lineno=1452];
	"1379:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9f9b910>",
		fillcolor=springgreen,
		label="1379:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1379:IF" -> "1379:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1379];
	"1337:IF" -> "1339:IF"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1337];
	"1337:IF" -> "1337:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1337];
	"Leaf_1291:AL" -> "1328:AS";
	"Leaf_1291:AL" -> "1325:AS";
	"Leaf_1291:AL" -> "1327:AS";
	"1297:AL" -> "1298:NS"	 [cond="[]",
		lineno=None];
	"1447:IF" -> "1447:BS"	 [cond="['rx_active']",
		label="(!rx_active)",
		lineno=1447];
	"1266:AS" -> "1284:AS";
	"1377:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13c9f9b790>",
		fillcolor=springgreen,
		label="1377:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1376:AL" -> "1377:IF"	 [cond="[]",
		lineno=None];
	"1260:NS" -> "Leaf_1258:AL"	 [cond="[]",
		lineno=None];
	"1291:AL" -> "1292:IF"	 [cond="[]",
		lineno=None];
	"u1.738:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13cc7b8890>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.738:AS
crc_out[0] = din[7] ^ din[6] ^ din[5] ^ din[4] ^ din[3] ^ din[2] ^ din[1] ^ din[0] ^ crc_in[8] ^ crc_in[9] ^ crc_in[10] ^ \
crc_in[11] ^ crc_in[12] ^ crc_in[13] ^ crc_in[14] ^ crc_in[15];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['din', 'din', 'din', 'din', 'din', 'din', 'din', 'din', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in', 'crc_in', '\
crc_in']"];
	"u1.738:AS" -> "1376:AL";
	"1401:NS"	 [ast="<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fae8d0>",
		fillcolor=firebrick,
		label="1401:NS
state <= next_state;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f13c9fae8d0>]",
		style=filled,
		typ=NonblockingSubstitution];
	"1401:NS" -> "Leaf_1398:AL"	 [cond="[]",
		lineno=None];
	"1403:AL" -> "1405:BL"	 [cond="[]",
		lineno=None];
	"u1.756:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f86490>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.756:AS
crc_out[13] = crc_in[5];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_in']"];
	"u1.756:AS" -> "1376:AL";
	"1359:IF" -> "1359:NS"	 [cond="['data_valid_d']",
		label=data_valid_d,
		lineno=1359];
	"1466:IF" -> "1466:BS"	 [cond="['rx_valid', 'rx_active', 'rx_err']",
		label="(rx_valid && rx_active && !rx_err)",
		lineno=1466];
	"1430:IF" -> "1437:IF"	 [cond="['pid_TOKEN', 'rx_valid', 'rx_active', 'rx_err']",
		label="!((pid_TOKEN && rx_valid && rx_active && !rx_err))",
		lineno=1430];
	"1431:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f13c9fb9790>",
		fillcolor=turquoise,
		label="1431:BL
token_le_1 = 1'b1;
next_state = TOKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb97d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f13c9fb9910>]",
		style=filled,
		typ=Block];
	"1430:IF" -> "1431:BL"	 [cond="['pid_TOKEN', 'rx_valid', 'rx_active', 'rx_err']",
		label="(pid_TOKEN && rx_valid && rx_active && !rx_err)",
		lineno=1430];
	"1326:AS" -> "u0.1126:AS";
	"1326:AS" -> "u0.1136:AS";
	"1326:AS" -> "u0.1129:AS";
	"1326:AS" -> "u0.1132:AS";
	"1326:AS" -> "u0.1139:AS";
	"u1.757:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f13c9f866d0>",
		def_var="['crc_out']",
		fillcolor=deepskyblue,
		label="u1.757:AS
crc_out[14] = crc_in[6];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['crc_in']"];
	"u1.757:AS" -> "1376:AL";
	"1262:NS" -> "Leaf_1258:AL"	 [cond="[]",
		lineno=None];
	"1451:BL" -> "1452:IF"	 [cond="[]",
		lineno=None];
	"1267:AS" -> "1284:AS";
	"1377:IF" -> "1377:NS"	 [cond="['crc16_clr']",
		label=crc16_clr,
		lineno=1377];
	"1377:IF" -> "1379:IF"	 [cond="['crc16_clr']",
		label="!(crc16_clr)",
		lineno=1377];
	"1289:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f13ca2508d0>",
		fillcolor=springgreen,
		label="1289:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"1288:AL" -> "1289:IF"	 [cond="[]",
		lineno=None];
	"1464:CA" -> "1465:BL"	 [cond="[]",
		lineno=None];
	"1289:IF" -> "1289:NS"	 [cond="['token_le_1']",
		label=token_le_1,
		lineno=1289];
	"u0.1132:AS" -> "1322:AS";
	"1418:IF" -> "1418:BS"	 [cond="['rx_valid', 'rx_active']",
		label="(rx_valid && rx_active)",
		lineno=1418];
	"1355:NS" -> "Leaf_1354:AL"	 [cond="[]",
		lineno=None];
	"u0.1139:AS" -> "1322:AS";
	"1431:BL" -> "Leaf_1403:AL"	 [cond="[]",
		lineno=None];
	"1400:IF" -> "1400:NS"	 [cond="['rst']",
		label="(!rst)",
		lineno=1400];
	"1400:IF" -> "1401:NS"	 [cond="['rst']",
		label="!((!rst))",
		lineno=1400];
}
